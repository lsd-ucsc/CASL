digraph G {
    node [shape=box];
    subgraph cluster0 {
        label="Extraction";
        certA [label="certification\n\n(eg. type checking is\na prerequsite to both\ninterpret or extract)"];

        srcA [label="code and proofs"];
        dstA [label="machine instructions\n\"behavior\""];
        srcA -> dstA [color=blue,penwidth=2,label="interpret"];
        exeA [label="executable code"];
        srcA -> exeA [color=blue,penwidth=2,label="compile\l\l(\"extract\", when via\l a significant I.R.)\l"];
        exeA -> dstA [color=blue,penwidth=2,label="run"];
        srcA -> certA [color=red,penwidth=2,xlabel="verify\lproofs\l"];
    }
    subgraph cluster1 {
        label="Intraction";
        srcB [label="code"];
        dstB [label="machine instructions\n\"behavior\""];
        srcB -> dstB [color=blue,penwidth=2,label="interpret"];
        exeB [label="executable code"];
        srcB -> exeB [color=blue,penwidth=2,label="compile"];
        exeB -> dstB [color=blue,penwidth=2,label="run"];
        srcB2 [label="verifiable code"];
        srcB -> srcB2 [color=red,penwidth=2,xlabel="compile"];
        certB [label="certification"];
        srcB2 -> verif:n [color=red,penwidth=2,arrowhead=none];
        proof [label="proofs"];
        proof -> verif:n [color=red,penwidth=2,arrowhead=none];
        verif [shape=none,label="verify\lproofs\l"];
        verif -> certB [color=red,penwidth=2];
    }
}
